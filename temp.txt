chapter1 - Springing into action: 
	Knight 
		- Injecting dependencies
		- Applying aspects
		
chapter2 - Wiring beans:
	SpringIdol
		- Declaring beans
		- Injecting object references with constructors
		- Creating beans through factory method
		- Bean scoping
		- Initializing and destroying beans
		- Injecting into bean properties
		- Injecting inner beans into bean properties
		- p namespace
		- Collections
		- SpEl expression

chapter3 - Additional ways of wiring beans:
	SpringIdol2
		- Abstract component
		- Overriding properties
		- General abstract properties
		- Replace method (MethodReplacer)
		- Replace method (Lookup method)
		- Inject non spring component
		
	CustomPropertyEditor
		- Custom property editor (Ð¡ustomEditorConfigurer)
		
	PostProcessor
		- Post-processor components (BeanPostProcessor)
		- Post-processing of the container (BeanFactoryPostProcessor)
	Scenario
		- Components managed by scripts (Ruby, BeanShell)
		- Updating the components managed by scenarios
		- Creating components managed by scenarios directly in the configuration
		
chapter4 - Minimizing XML configuration in Spring:
	SpringIdol3
		- Autowiring by name
		- Autowiring by type
		- Autowiring constructors
		- Default autowiring
		- Using @Autowired
		- Using @Qualifier
		- Creating custom qualifier
		- Using @Inject
		- Automatically discovered bean (context:component-scan)
		
chapter5 - Aspect-oriented Spring:
	SpringIdol4
		- Declaring before and after advice
		- Declaring around advice
		- Passing parameters to advice
		- Introducing new functionality with aspects
		- Annotation aspects
		- Annotation around advice
		- Passing arguments to annotated advice

chapter6 - Hitting the database: 
	Spitter
		- Configuring a data source (JNDI, pooled data source, JDBC drived based data source)
		- Using JDBC with Spring
		
	SpitterHibernate
		- Integrating Hibernate with Spring
		- Declaring a Hibernate session factory
		
	SpitterJPA
		- Java persistence API
		- Configuration an entity manager factory
		- Configuration container managed JPA
		- Writting a JPA based DAO
		
	RoadRantz
		- Caching
		- Setting EHCache
		- Flushing cache
		
chapter7 - Managing transactions
	SpitterTransactionWithProgramManagement
		- Hibernate Transaction
		- Programming transactions in Spring
		- Declaring transactions
		(Propogation behavior, isolation level, read only, transaction timeout, rollback rules)
		
chapter8 - Securing Spring
	SpitterMVC
		- Setting up Spring MVC
		- Writing a basic controller
		- Resolving views
		- Handling controller  input
		- Processing forms
		- Validating input
		- Displaying validation errors
		- Handling file uploads